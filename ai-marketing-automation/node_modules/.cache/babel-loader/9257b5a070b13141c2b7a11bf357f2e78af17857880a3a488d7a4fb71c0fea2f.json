{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Ia marketing\\\\Painel-integrado\\\\ai-marketing-automation\\\\src\\\\components\\\\AIChat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './AIChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIChat = ({\n  user,\n  isOpen,\n  onToggle\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const quickActions = [{\n    id: 'create-campaign',\n    label: 'Create Campaign',\n    prompt: 'I want to create a new marketing campaign',\n    icon: '🚀'\n  }, {\n    id: 'analyze-performance',\n    label: 'Analyze Performance',\n    prompt: 'Show me insights about my current campaigns',\n    icon: '📊'\n  }, {\n    id: 'optimize-budget',\n    label: 'Optimize Budget',\n    prompt: 'Help me optimize my marketing budget allocation',\n    icon: '💰'\n  }, {\n    id: 'content-ideas',\n    label: 'Content Ideas',\n    prompt: 'Generate content ideas for my social media campaigns',\n    icon: '💡'\n  }];\n  useEffect(() => {\n    if (isOpen && messages.length === 0) {\n      // Initialize with welcome message\n      const welcomeMessage = {\n        id: 'welcome',\n        type: 'ai',\n        content: `Hi ${user.name}! 👋 I'm your AI marketing assistant. I can help you create campaigns, analyze performance, optimize budgets, and much more. What would you like to work on today?`,\n        timestamp: new Date()\n      };\n      setMessages([welcomeMessage]);\n    }\n  }, [isOpen, user.name, messages.length]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isOpen]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const simulateAIResponse = async userMessage => {\n    // Simulate AI processing time\n    await new Promise(resolve => setTimeout(resolve, 1500 + Math.random() * 1000));\n\n    // Simple response logic based on keywords\n    const message = userMessage.toLowerCase();\n    if (message.includes('campaign') || message.includes('create')) {\n      return `I'd be happy to help you create a new campaign! 🚀\n\nTo get started, I need to understand your goals better:\n\n1. **What's your main objective?** (Brand awareness, lead generation, sales, etc.)\n2. **Which platforms** do you want to use? (Instagram, Facebook, WhatsApp, Email)\n3. **What's your target audience?** (Demographics, interests, location)\n4. **What's your budget range?**\n5. **Do you have any creative assets** (images, videos, copy) or should I help generate them?\n\nOnce I have these details, I can create a comprehensive campaign strategy with:\n- Optimized ad copy and creatives\n- Audience targeting recommendations\n- Budget allocation across platforms\n- Performance tracking setup\n\nWhat's your main goal for this campaign?`;\n    }\n    if (message.includes('performance') || message.includes('analytics') || message.includes('insights')) {\n      return `Let me analyze your current campaign performance! 📊\n\nBased on your recent campaigns, here are some key insights:\n\n**📈 Performance Highlights:**\n- Your Instagram campaigns have a 2.67% CTR (above industry average!)\n- WhatsApp campaigns show 7.11% conversion rate\n- Facebook campaigns need optimization (5.06% CTR vs 7.5% potential)\n\n**🎯 Recommendations:**\n1. **Increase Instagram budget** - It's your best performing platform\n2. **A/B test Facebook ad creatives** - Try video content vs static images\n3. **Expand WhatsApp automation** - High conversion rate indicates strong audience fit\n4. **Optimize for mobile** - 78% of your traffic is mobile\n\n**🚀 Quick Wins:**\n- Reallocate 20% budget from Facebook to Instagram\n- Create 3 new video creatives for Facebook\n- Set up WhatsApp chatbot for lead qualification\n\nWould you like me to implement any of these optimizations automatically?`;\n    }\n    if (message.includes('budget') || message.includes('optimize') || message.includes('allocation')) {\n      return `Let me help you optimize your marketing budget! 💰\n\n**Current Budget Analysis:**\n- Total Monthly Budget: $10,000\n- Instagram: $5,000 (50%) - **Performing well** ✅\n- Facebook: $3,000 (30%) - **Needs optimization** ⚠️\n- WhatsApp: $2,000 (20%) - **High ROI** 🎯\n\n**Recommended Reallocation:**\n- Instagram: $5,500 (55%) - Increase by $500\n- Facebook: $2,500 (25%) - Decrease by $500, focus on video content\n- WhatsApp: $2,000 (20%) - Maintain, add automation\n\n**Expected Results:**\n- 15-20% increase in overall ROAS\n- 25% more qualified leads\n- Better cost per acquisition\n\n**Budget Optimization Features I can set up:**\n1. **Auto-bidding** based on performance\n2. **Daily budget caps** to prevent overspend\n3. **Performance alerts** when campaigns underperform\n4. **Automatic pause/resume** based on ROI thresholds\n\nShould I implement these budget optimizations for you?`;\n    }\n    if (message.includes('content') || message.includes('ideas') || message.includes('creative')) {\n      return `I'll generate some creative content ideas for you! 💡\n\n**Content Strategy Based on Your Business:**\n\n**📸 Instagram Content Ideas:**\n1. **Behind-the-scenes** posts showing your process\n2. **User-generated content** campaigns with branded hashtags\n3. **Story polls** asking audience preferences\n4. **Carousel posts** showcasing product features\n5. **Reels** with trending audio and quick tips\n\n**👥 Facebook Content Ideas:**\n1. **Video testimonials** from satisfied customers\n2. **Live Q&A sessions** about your industry\n3. **Educational posts** solving common problems\n4. **Community polls** for engagement\n5. **Event announcements** and behind-the-scenes\n\n**💬 WhatsApp Content Ideas:**\n1. **Welcome sequences** for new subscribers\n2. **Exclusive offers** for WhatsApp followers\n3. **Quick customer support** responses\n4. **Product catalogs** with easy ordering\n5. **Appointment booking** automation\n\n**Content Calendar Suggestions:**\n- **Monday:** Motivational/Educational\n- **Wednesday:** Product/Service Spotlight\n- **Friday:** Behind-the-scenes/Fun content\n- **Weekend:** User-generated content\n\nWould you like me to create specific content for any of these ideas, or set up a content calendar for you?`;\n    }\n\n    // Default response\n    return `I understand you're looking for help with your marketing! 🤖\n\nI can assist you with:\n- **Creating new campaigns** across Instagram, Facebook, WhatsApp, and Email\n- **Analyzing performance** and providing actionable insights\n- **Optimizing budgets** for better ROI\n- **Generating content ideas** and creative assets\n- **Setting up automation** for lead nurturing\n- **A/B testing strategies** to improve results\n\nWhat specific area would you like to focus on? Just describe what you're trying to achieve, and I'll create a detailed plan for you!`;\n  };\n  const handleSendMessage = async content => {\n    if (!content.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now().toString(),\n      type: 'user',\n      content: content.trim(),\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsLoading(true);\n    setIsTyping(true);\n    try {\n      const aiResponse = await simulateAIResponse(content);\n      setIsTyping(false);\n      const aiMessage = {\n        id: (Date.now() + 1).toString(),\n        type: 'ai',\n        content: aiResponse,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      setIsTyping(false);\n      const errorMessage = {\n        id: (Date.now() + 1).toString(),\n        type: 'system',\n        content: 'Sorry, I encountered an error. Please try again.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleQuickAction = action => {\n    handleSendMessage(action.prompt);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage(inputValue);\n    }\n  };\n  const formatMessageContent = content => {\n    // Simple markdown-like formatting\n    return content.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>').replace(/\\*(.*?)\\*/g, '<em>$1</em>').replace(/`(.*?)`/g, '<code>$1</code>').split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: line || '<br>'\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this));\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-chat-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-avatar\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"AI Marketing Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `status ${isTyping ? 'typing' : 'online'}`,\n              children: isTyping ? 'Typing...' : 'Online'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-chat-btn\",\n          onClick: onToggle,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.type}`,\n          children: [message.type === 'ai' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: formatMessageContent(message.content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: message.timestamp.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), message.type === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar user-avatar\",\n            children: user.name.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message ai\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), messages.length <= 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Quick actions to get started:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quick-actions-grid\",\n          children: quickActions.map(action => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"quick-action-btn\",\n            onClick: () => handleQuickAction(action),\n            disabled: isLoading,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"action-icon\",\n              children: action.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: action.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this)]\n          }, action.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputRef,\n            type: \"text\",\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask me anything about your marketing campaigns...\",\n            className: \"chat-input\",\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSendMessage(inputValue),\n            disabled: !inputValue.trim() || isLoading,\n            className: \"send-btn\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this) : '➤'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"input-hint\",\n          children: \"Press Enter to send \\u2022 Shift+Enter for new line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n_s(AIChat, \"HYsfFbQlLmteQkkRgDKRJPuJ7Zw=\");\n_c = AIChat;\nexport default AIChat;\nvar _c;\n$RefreshReg$(_c, \"AIChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AIChat","user","isOpen","onToggle","_s","messages","setMessages","inputValue","setInputValue","isTyping","setIsTyping","isLoading","setIsLoading","messagesEndRef","inputRef","quickActions","id","label","prompt","icon","length","welcomeMessage","type","content","name","timestamp","Date","scrollToBottom","current","focus","_messagesEndRef$curre","scrollIntoView","behavior","simulateAIResponse","userMessage","Promise","resolve","setTimeout","Math","random","message","toLowerCase","includes","handleSendMessage","trim","now","toString","prev","aiResponse","aiMessage","error","errorMessage","handleQuickAction","action","handleKeyPress","e","key","shiftKey","preventDefault","formatMessageContent","replace","split","map","line","index","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","toLocaleTimeString","hour","minute","charAt","toUpperCase","ref","disabled","value","onChange","target","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Ia marketing/Painel-integrado/ai-marketing-automation/src/components/AIChat.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './AIChat.css';\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  isFirstTime: boolean;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\ninterface AIChatProps {\r\n  user: User;\r\n  isOpen: boolean;\r\n  onToggle: () => void;\r\n}\r\n\r\ninterface Message {\r\n  id: string;\r\n  type: 'user' | 'ai' | 'system';\r\n  content: string;\r\n  timestamp: Date;\r\n  isTyping?: boolean;\r\n}\r\n\r\ninterface QuickAction {\r\n  id: string;\r\n  label: string;\r\n  prompt: string;\r\n  icon: string;\r\n}\r\n\r\nconst AIChat: React.FC<AIChatProps> = ({ user, isOpen, onToggle }) => {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const quickActions: QuickAction[] = [\r\n    {\r\n      id: 'create-campaign',\r\n      label: 'Create Campaign',\r\n      prompt: 'I want to create a new marketing campaign',\r\n      icon: '🚀'\r\n    },\r\n    {\r\n      id: 'analyze-performance',\r\n      label: 'Analyze Performance',\r\n      prompt: 'Show me insights about my current campaigns',\r\n      icon: '📊'\r\n    },\r\n    {\r\n      id: 'optimize-budget',\r\n      label: 'Optimize Budget',\r\n      prompt: 'Help me optimize my marketing budget allocation',\r\n      icon: '💰'\r\n    },\r\n    {\r\n      id: 'content-ideas',\r\n      label: 'Content Ideas',\r\n      prompt: 'Generate content ideas for my social media campaigns',\r\n      icon: '💡'\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (isOpen && messages.length === 0) {\r\n      // Initialize with welcome message\r\n      const welcomeMessage: Message = {\r\n        id: 'welcome',\r\n        type: 'ai',\r\n        content: `Hi ${user.name}! 👋 I'm your AI marketing assistant. I can help you create campaigns, analyze performance, optimize budgets, and much more. What would you like to work on today?`,\r\n        timestamp: new Date()\r\n      };\r\n      setMessages([welcomeMessage]);\r\n    }\r\n  }, [isOpen, user.name, messages.length]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const simulateAIResponse = async (userMessage: string): Promise<string> => {\r\n    // Simulate AI processing time\r\n    await new Promise(resolve => setTimeout(resolve, 1500 + Math.random() * 1000));\r\n\r\n    // Simple response logic based on keywords\r\n    const message = userMessage.toLowerCase();\r\n    \r\n    if (message.includes('campaign') || message.includes('create')) {\r\n      return `I'd be happy to help you create a new campaign! 🚀\r\n\r\nTo get started, I need to understand your goals better:\r\n\r\n1. **What's your main objective?** (Brand awareness, lead generation, sales, etc.)\r\n2. **Which platforms** do you want to use? (Instagram, Facebook, WhatsApp, Email)\r\n3. **What's your target audience?** (Demographics, interests, location)\r\n4. **What's your budget range?**\r\n5. **Do you have any creative assets** (images, videos, copy) or should I help generate them?\r\n\r\nOnce I have these details, I can create a comprehensive campaign strategy with:\r\n- Optimized ad copy and creatives\r\n- Audience targeting recommendations\r\n- Budget allocation across platforms\r\n- Performance tracking setup\r\n\r\nWhat's your main goal for this campaign?`;\r\n    }\r\n    \r\n    if (message.includes('performance') || message.includes('analytics') || message.includes('insights')) {\r\n      return `Let me analyze your current campaign performance! 📊\r\n\r\nBased on your recent campaigns, here are some key insights:\r\n\r\n**📈 Performance Highlights:**\r\n- Your Instagram campaigns have a 2.67% CTR (above industry average!)\r\n- WhatsApp campaigns show 7.11% conversion rate\r\n- Facebook campaigns need optimization (5.06% CTR vs 7.5% potential)\r\n\r\n**🎯 Recommendations:**\r\n1. **Increase Instagram budget** - It's your best performing platform\r\n2. **A/B test Facebook ad creatives** - Try video content vs static images\r\n3. **Expand WhatsApp automation** - High conversion rate indicates strong audience fit\r\n4. **Optimize for mobile** - 78% of your traffic is mobile\r\n\r\n**🚀 Quick Wins:**\r\n- Reallocate 20% budget from Facebook to Instagram\r\n- Create 3 new video creatives for Facebook\r\n- Set up WhatsApp chatbot for lead qualification\r\n\r\nWould you like me to implement any of these optimizations automatically?`;\r\n    }\r\n    \r\n    if (message.includes('budget') || message.includes('optimize') || message.includes('allocation')) {\r\n      return `Let me help you optimize your marketing budget! 💰\r\n\r\n**Current Budget Analysis:**\r\n- Total Monthly Budget: $10,000\r\n- Instagram: $5,000 (50%) - **Performing well** ✅\r\n- Facebook: $3,000 (30%) - **Needs optimization** ⚠️\r\n- WhatsApp: $2,000 (20%) - **High ROI** 🎯\r\n\r\n**Recommended Reallocation:**\r\n- Instagram: $5,500 (55%) - Increase by $500\r\n- Facebook: $2,500 (25%) - Decrease by $500, focus on video content\r\n- WhatsApp: $2,000 (20%) - Maintain, add automation\r\n\r\n**Expected Results:**\r\n- 15-20% increase in overall ROAS\r\n- 25% more qualified leads\r\n- Better cost per acquisition\r\n\r\n**Budget Optimization Features I can set up:**\r\n1. **Auto-bidding** based on performance\r\n2. **Daily budget caps** to prevent overspend\r\n3. **Performance alerts** when campaigns underperform\r\n4. **Automatic pause/resume** based on ROI thresholds\r\n\r\nShould I implement these budget optimizations for you?`;\r\n    }\r\n    \r\n    if (message.includes('content') || message.includes('ideas') || message.includes('creative')) {\r\n      return `I'll generate some creative content ideas for you! 💡\r\n\r\n**Content Strategy Based on Your Business:**\r\n\r\n**📸 Instagram Content Ideas:**\r\n1. **Behind-the-scenes** posts showing your process\r\n2. **User-generated content** campaigns with branded hashtags\r\n3. **Story polls** asking audience preferences\r\n4. **Carousel posts** showcasing product features\r\n5. **Reels** with trending audio and quick tips\r\n\r\n**👥 Facebook Content Ideas:**\r\n1. **Video testimonials** from satisfied customers\r\n2. **Live Q&A sessions** about your industry\r\n3. **Educational posts** solving common problems\r\n4. **Community polls** for engagement\r\n5. **Event announcements** and behind-the-scenes\r\n\r\n**💬 WhatsApp Content Ideas:**\r\n1. **Welcome sequences** for new subscribers\r\n2. **Exclusive offers** for WhatsApp followers\r\n3. **Quick customer support** responses\r\n4. **Product catalogs** with easy ordering\r\n5. **Appointment booking** automation\r\n\r\n**Content Calendar Suggestions:**\r\n- **Monday:** Motivational/Educational\r\n- **Wednesday:** Product/Service Spotlight\r\n- **Friday:** Behind-the-scenes/Fun content\r\n- **Weekend:** User-generated content\r\n\r\nWould you like me to create specific content for any of these ideas, or set up a content calendar for you?`;\r\n    }\r\n    \r\n    // Default response\r\n    return `I understand you're looking for help with your marketing! 🤖\r\n\r\nI can assist you with:\r\n- **Creating new campaigns** across Instagram, Facebook, WhatsApp, and Email\r\n- **Analyzing performance** and providing actionable insights\r\n- **Optimizing budgets** for better ROI\r\n- **Generating content ideas** and creative assets\r\n- **Setting up automation** for lead nurturing\r\n- **A/B testing strategies** to improve results\r\n\r\nWhat specific area would you like to focus on? Just describe what you're trying to achieve, and I'll create a detailed plan for you!`;\r\n  };\r\n\r\n  const handleSendMessage = async (content: string) => {\r\n    if (!content.trim() || isLoading) return;\r\n\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      type: 'user',\r\n      content: content.trim(),\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setIsLoading(true);\r\n    setIsTyping(true);\r\n\r\n    try {\r\n      const aiResponse = await simulateAIResponse(content);\r\n      \r\n      setIsTyping(false);\r\n      \r\n      const aiMessage: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        type: 'ai',\r\n        content: aiResponse,\r\n        timestamp: new Date()\r\n      };\r\n\r\n      setMessages(prev => [...prev, aiMessage]);\r\n    } catch (error) {\r\n      setIsTyping(false);\r\n      const errorMessage: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        type: 'system',\r\n        content: 'Sorry, I encountered an error. Please try again.',\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleQuickAction = (action: QuickAction) => {\r\n    handleSendMessage(action.prompt);\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage(inputValue);\r\n    }\r\n  };\r\n\r\n  const formatMessageContent = (content: string) => {\r\n    // Simple markdown-like formatting\r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      .split('\\n')\r\n      .map((line, index) => (\r\n        <div key={index} dangerouslySetInnerHTML={{ __html: line || '<br>' }} />\r\n      ));\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"ai-chat-overlay\">\r\n      <div className=\"ai-chat-container\">\r\n        <div className=\"chat-header\">\r\n          <div className=\"chat-header-info\">\r\n            <div className=\"ai-avatar\">🤖</div>\r\n            <div>\r\n              <h3>AI Marketing Assistant</h3>\r\n              <p className={`status ${isTyping ? 'typing' : 'online'}`}>\r\n                {isTyping ? 'Typing...' : 'Online'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <button className=\"close-chat-btn\" onClick={onToggle}>\r\n            ✕\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"chat-messages\">\r\n          {messages.map((message) => (\r\n            <div key={message.id} className={`message ${message.type}`}>\r\n              {message.type === 'ai' && (\r\n                <div className=\"message-avatar\">🤖</div>\r\n              )}\r\n              <div className=\"message-content\">\r\n                <div className=\"message-text\">\r\n                  {formatMessageContent(message.content)}\r\n                </div>\r\n                <div className=\"message-time\">\r\n                  {message.timestamp.toLocaleTimeString([], { \r\n                    hour: '2-digit', \r\n                    minute: '2-digit' \r\n                  })}\r\n                </div>\r\n              </div>\r\n              {message.type === 'user' && (\r\n                <div className=\"message-avatar user-avatar\">\r\n                  {user.name.charAt(0).toUpperCase()}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n          \r\n          {isTyping && (\r\n            <div className=\"message ai\">\r\n              <div className=\"message-avatar\">🤖</div>\r\n              <div className=\"message-content\">\r\n                <div className=\"typing-indicator\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {messages.length <= 1 && (\r\n          <div className=\"quick-actions\">\r\n            <p>Quick actions to get started:</p>\r\n            <div className=\"quick-actions-grid\">\r\n              {quickActions.map((action) => (\r\n                <button\r\n                  key={action.id}\r\n                  className=\"quick-action-btn\"\r\n                  onClick={() => handleQuickAction(action)}\r\n                  disabled={isLoading}\r\n                >\r\n                  <span className=\"action-icon\">{action.icon}</span>\r\n                  <span>{action.label}</span>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"chat-input-container\">\r\n          <div className=\"chat-input-wrapper\">\r\n            <input\r\n              ref={inputRef}\r\n              type=\"text\"\r\n              value={inputValue}\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Ask me anything about your marketing campaigns...\"\r\n              className=\"chat-input\"\r\n              disabled={isLoading}\r\n            />\r\n            <button\r\n              onClick={() => handleSendMessage(inputValue)}\r\n              disabled={!inputValue.trim() || isLoading}\r\n              className=\"send-btn\"\r\n            >\r\n              {isLoading ? (\r\n                <div className=\"loading-spinner small\"></div>\r\n              ) : (\r\n                '➤'\r\n              )}\r\n            </button>\r\n          </div>\r\n          <p className=\"input-hint\">\r\n            Press Enter to send • Shift+Enter for new line\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIChat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA+BtB,MAAMC,MAA6B,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMkB,cAAc,GAAGhB,MAAM,CAAiB,IAAI,CAAC;EACnD,MAAMiB,QAAQ,GAAGjB,MAAM,CAAmB,IAAI,CAAC;EAE/C,MAAMkB,YAA2B,GAAG,CAClC;IACEC,EAAE,EAAE,iBAAiB;IACrBC,KAAK,EAAE,iBAAiB;IACxBC,MAAM,EAAE,2CAA2C;IACnDC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,EAAE,EAAE,qBAAqB;IACzBC,KAAK,EAAE,qBAAqB;IAC5BC,MAAM,EAAE,6CAA6C;IACrDC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,EAAE,EAAE,iBAAiB;IACrBC,KAAK,EAAE,iBAAiB;IACxBC,MAAM,EAAE,iDAAiD;IACzDC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,EAAE,EAAE,eAAe;IACnBC,KAAK,EAAE,eAAe;IACtBC,MAAM,EAAE,sDAAsD;IAC9DC,IAAI,EAAE;EACR,CAAC,CACF;EAEDvB,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,IAAIG,QAAQ,CAACe,MAAM,KAAK,CAAC,EAAE;MACnC;MACA,MAAMC,cAAuB,GAAG;QAC9BL,EAAE,EAAE,SAAS;QACbM,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,MAAMtB,IAAI,CAACuB,IAAI,oKAAoK;QAC5LC,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC;MACDpB,WAAW,CAAC,CAACe,cAAc,CAAC,CAAC;IAC/B;EACF,CAAC,EAAE,CAACnB,MAAM,EAAED,IAAI,CAACuB,IAAI,EAAEnB,QAAQ,CAACe,MAAM,CAAC,CAAC;EAExCxB,SAAS,CAAC,MAAM;IACd+B,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACtB,QAAQ,CAAC,CAAC;EAEdT,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,IAAIY,QAAQ,CAACc,OAAO,EAAE;MAC9Bd,QAAQ,CAACc,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAAC3B,MAAM,CAAC,CAAC;EAEZ,MAAMyB,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAG,qBAAA;IAC3B,CAAAA,qBAAA,GAAAjB,cAAc,CAACe,OAAO,cAAAE,qBAAA,uBAAtBA,qBAAA,CAAwBC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAOC,WAAmB,IAAsB;IACzE;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,GAAGE,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;;IAE9E;IACA,MAAMC,OAAO,GAAGN,WAAW,CAACO,WAAW,CAAC,CAAC;IAEzC,IAAID,OAAO,CAACE,QAAQ,CAAC,UAAU,CAAC,IAAIF,OAAO,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC9D,OAAO;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;IACrC;IAEA,IAAIF,OAAO,CAACE,QAAQ,CAAC,aAAa,CAAC,IAAIF,OAAO,CAACE,QAAQ,CAAC,WAAW,CAAC,IAAIF,OAAO,CAACE,QAAQ,CAAC,UAAU,CAAC,EAAE;MACpG,OAAO;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;IACrE;IAEA,IAAIF,OAAO,CAACE,QAAQ,CAAC,QAAQ,CAAC,IAAIF,OAAO,CAACE,QAAQ,CAAC,UAAU,CAAC,IAAIF,OAAO,CAACE,QAAQ,CAAC,YAAY,CAAC,EAAE;MAChG,OAAO;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;IACnD;IAEA,IAAIF,OAAO,CAACE,QAAQ,CAAC,SAAS,CAAC,IAAIF,OAAO,CAACE,QAAQ,CAAC,OAAO,CAAC,IAAIF,OAAO,CAACE,QAAQ,CAAC,UAAU,CAAC,EAAE;MAC5F,OAAO;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G;IACvG;;IAEA;IACA,OAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qIAAqI;EACnI,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAOpB,OAAe,IAAK;IACnD,IAAI,CAACA,OAAO,CAACqB,IAAI,CAAC,CAAC,IAAIjC,SAAS,EAAE;IAElC,MAAMuB,WAAoB,GAAG;MAC3BlB,EAAE,EAAEU,IAAI,CAACmB,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBxB,IAAI,EAAE,MAAM;MACZC,OAAO,EAAEA,OAAO,CAACqB,IAAI,CAAC,CAAC;MACvBnB,SAAS,EAAE,IAAIC,IAAI,CAAC;IACtB,CAAC;IAEDpB,WAAW,CAACyC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEb,WAAW,CAAC,CAAC;IAC3C1B,aAAa,CAAC,EAAE,CAAC;IACjBI,YAAY,CAAC,IAAI,CAAC;IAClBF,WAAW,CAAC,IAAI,CAAC;IAEjB,IAAI;MACF,MAAMsC,UAAU,GAAG,MAAMf,kBAAkB,CAACV,OAAO,CAAC;MAEpDb,WAAW,CAAC,KAAK,CAAC;MAElB,MAAMuC,SAAkB,GAAG;QACzBjC,EAAE,EAAE,CAACU,IAAI,CAACmB,GAAG,CAAC,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC;QAC/BxB,IAAI,EAAE,IAAI;QACVC,OAAO,EAAEyB,UAAU;QACnBvB,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC;MAEDpB,WAAW,CAACyC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdxC,WAAW,CAAC,KAAK,CAAC;MAClB,MAAMyC,YAAqB,GAAG;QAC5BnC,EAAE,EAAE,CAACU,IAAI,CAACmB,GAAG,CAAC,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC;QAC/BxB,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE,kDAAkD;QAC3DE,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC;MACDpB,WAAW,CAACyC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEI,YAAY,CAAC,CAAC;IAC9C,CAAC,SAAS;MACRvC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMwC,iBAAiB,GAAIC,MAAmB,IAAK;IACjDV,iBAAiB,CAACU,MAAM,CAACnC,MAAM,CAAC;EAClC,CAAC;EAED,MAAMoC,cAAc,GAAIC,CAAsB,IAAK;IACjD,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;MACpCF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClBf,iBAAiB,CAACpC,UAAU,CAAC;IAC/B;EACF,CAAC;EAED,MAAMoD,oBAAoB,GAAIpC,OAAe,IAAK;IAChD;IACA,OAAOA,OAAO,CACXqC,OAAO,CAAC,gBAAgB,EAAE,qBAAqB,CAAC,CAChDA,OAAO,CAAC,YAAY,EAAE,aAAa,CAAC,CACpCA,OAAO,CAAC,UAAU,EAAE,iBAAiB,CAAC,CACtCC,KAAK,CAAC,IAAI,CAAC,CACXC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACfjE,OAAA;MAAiBkE,uBAAuB,EAAE;QAAEC,MAAM,EAAEH,IAAI,IAAI;MAAO;IAAE,GAA3DC,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwD,CACxE,CAAC;EACN,CAAC;EAED,IAAI,CAACpE,MAAM,EAAE,OAAO,IAAI;EAExB,oBACEH,OAAA;IAAKwE,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BzE,OAAA;MAAKwE,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCzE,OAAA;QAAKwE,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BzE,OAAA;UAAKwE,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BzE,OAAA;YAAKwE,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnCvE,OAAA;YAAAyE,QAAA,gBACEzE,OAAA;cAAAyE,QAAA,EAAI;YAAsB;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/BvE,OAAA;cAAGwE,SAAS,EAAE,UAAU9D,QAAQ,GAAG,QAAQ,GAAG,QAAQ,EAAG;cAAA+D,QAAA,EACtD/D,QAAQ,GAAG,WAAW,GAAG;YAAQ;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNvE,OAAA;UAAQwE,SAAS,EAAC,gBAAgB;UAACE,OAAO,EAAEtE,QAAS;UAAAqE,QAAA,EAAC;QAEtD;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENvE,OAAA;QAAKwE,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC3BnE,QAAQ,CAACyD,GAAG,CAAEtB,OAAO,iBACpBzC,OAAA;UAAsBwE,SAAS,EAAE,WAAW/B,OAAO,CAAClB,IAAI,EAAG;UAAAkD,QAAA,GACxDhC,OAAO,CAAClB,IAAI,KAAK,IAAI,iBACpBvB,OAAA;YAAKwE,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAC;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACxC,eACDvE,OAAA;YAAKwE,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BzE,OAAA;cAAKwE,SAAS,EAAC,cAAc;cAAAC,QAAA,EAC1Bb,oBAAoB,CAACnB,OAAO,CAACjB,OAAO;YAAC;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC,eACNvE,OAAA;cAAKwE,SAAS,EAAC,cAAc;cAAAC,QAAA,EAC1BhC,OAAO,CAACf,SAAS,CAACiD,kBAAkB,CAAC,EAAE,EAAE;gBACxCC,IAAI,EAAE,SAAS;gBACfC,MAAM,EAAE;cACV,CAAC;YAAC;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACL9B,OAAO,CAAClB,IAAI,KAAK,MAAM,iBACtBvB,OAAA;YAAKwE,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EACxCvE,IAAI,CAACuB,IAAI,CAACqD,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;UAAC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CACN;QAAA,GAnBO9B,OAAO,CAACxB,EAAE;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoBf,CACN,CAAC,EAED7D,QAAQ,iBACPV,OAAA;UAAKwE,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBzE,OAAA;YAAKwE,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAC;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxCvE,OAAA;YAAKwE,SAAS,EAAC,iBAAiB;YAAAC,QAAA,eAC9BzE,OAAA;cAAKwE,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC/BzE,OAAA;gBAAAoE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACbvE,OAAA;gBAAAoE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACbvE,OAAA;gBAAAoE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAEDvE,OAAA;UAAKgF,GAAG,EAAElE;QAAe;UAAAsD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,EAELjE,QAAQ,CAACe,MAAM,IAAI,CAAC,iBACnBrB,OAAA;QAAKwE,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BzE,OAAA;UAAAyE,QAAA,EAAG;QAA6B;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpCvE,OAAA;UAAKwE,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAChCzD,YAAY,CAAC+C,GAAG,CAAET,MAAM,iBACvBtD,OAAA;YAEEwE,SAAS,EAAC,kBAAkB;YAC5BE,OAAO,EAAEA,CAAA,KAAMrB,iBAAiB,CAACC,MAAM,CAAE;YACzC2B,QAAQ,EAAErE,SAAU;YAAA6D,QAAA,gBAEpBzE,OAAA;cAAMwE,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAEnB,MAAM,CAAClC;YAAI;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAClDvE,OAAA;cAAAyE,QAAA,EAAOnB,MAAM,CAACpC;YAAK;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GANtBjB,MAAM,CAACrC,EAAE;YAAAmD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOR,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAEDvE,OAAA;QAAKwE,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCzE,OAAA;UAAKwE,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjCzE,OAAA;YACEgF,GAAG,EAAEjE,QAAS;YACdQ,IAAI,EAAC,MAAM;YACX2D,KAAK,EAAE1E,UAAW;YAClB2E,QAAQ,EAAG3B,CAAC,IAAK/C,aAAa,CAAC+C,CAAC,CAAC4B,MAAM,CAACF,KAAK,CAAE;YAC/CG,UAAU,EAAE9B,cAAe;YAC3B+B,WAAW,EAAC,mDAAmD;YAC/Dd,SAAS,EAAC,YAAY;YACtBS,QAAQ,EAAErE;UAAU;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC,eACFvE,OAAA;YACE0E,OAAO,EAAEA,CAAA,KAAM9B,iBAAiB,CAACpC,UAAU,CAAE;YAC7CyE,QAAQ,EAAE,CAACzE,UAAU,CAACqC,IAAI,CAAC,CAAC,IAAIjC,SAAU;YAC1C4D,SAAS,EAAC,UAAU;YAAAC,QAAA,EAEnB7D,SAAS,gBACRZ,OAAA;cAAKwE,SAAS,EAAC;YAAuB;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,GAE7C;UACD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNvE,OAAA;UAAGwE,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAE1B;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClE,EAAA,CA9WIJ,MAA6B;AAAAsF,EAAA,GAA7BtF,MAA6B;AAgXnC,eAAeA,MAAM;AAAC,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}